#!/usr/bin/python -tt
# -*- coding: utf-8 -*-

from pytz import timezone
from datetime import datetime
import datetime, pytz
import argparse
import time
import calendar
import json

dt=datetime.datetime.now()

def sumar_hora(fecha_entera):
	if len(fecha_entera)>2:
		dt=fecha_entera[1]+" "+fecha_entera[2]
		dt=datetime.datetime.strptime(dt,"%Y-%m-%d %H:%M:%S")
	elif len(fecha_entera)==2:
		dt=datetime.datetime.fromtimestamp(float(fecha_entera[1]))	
	return dt

def main():
	usage = "%prog [opciones] origen destino"
	parser= argparse.ArgumentParser(description="Short sample app")
	parser.add_argument("-t" , "--timezone", action="store", dest="timezone", help="-t [lugar] para mostrar la hora de [lugar]") 
	parser.add_argument("-j" , "--json", action="store_true", dest="json", help="Muestra la salida en formato json")

	args = parser.parse_args()
	lista=[]	
	fichero=open("fechas.txt","r")
	fmt = "%Y-%m-%d %H:%M:%S%z"
	if args.timezone:
		print "------------", args.timezone, "-------------"
	for linea in fichero:
		elemento=[]
		try:
			linea=linea.replace(",","")
			fecha_hora=linea[:-1].split(" ")
			if int(fecha_hora[0])>0 and int(fecha_hora[0])<99:
				if args.json:
					elemento.append(fecha_hora[0])
					if len(fecha_hora)>2:
						elemento=json.dumps({int(fecha_hora[0]):fecha_hora[1]+" "+fecha_hora[2]})
					else:				
						elemento=json.dumps({int(fecha_hora[0]):float(fecha_hora[1])})	
					lista.append(elemento)
				if len(fecha_hora)>2:
					if fecha_hora[3]=="Madrid":				
						zona=timezone('Europe/Madrid')
						dt=sumar_hora(fecha_hora)				
						dt=zona.localize(dt)
					elif fecha_hora[3]=="Londres":	
						zona=timezone('Europe/London')
						dt=sumar_hora(fecha_hora)				
						dt=zona.localize(dt)
					elif fecha_hora[3]=="Tokio":	
						zona=timezone('Asia/Tokyo')
						dt=sumar_hora(fecha_hora)				
						dt=zona.localize(dt)
					elif fecha_hora[3]=="New_York":	
						dt=sumar_hora(fecha_hora)
						zona=timezone('America/New_York')								
						dt=zona.localize(dt)
					elif fecha_hora[3]=="Moscu":	
						zona=timezone('Europe/Moscow')
						dt=sumar_hora(fecha_hora)				
						dt=zona.localize(dt)
					elif fecha_hora[3]=="UTC":
						zona=pytz.utc
						dt=sumar_hora(fecha_hora)				
						dt=zona.localize(dt)
				else:
					dt=sumar_hora(fecha_hora)
					dt=pytz.utc.localize(dt)
	
				if args.timezone=="madrid":
					dt = dt.astimezone(pytz.timezone('Europe/Madrid'))
					print fecha_hora[0], dt
				elif args.timezone=="epoch":
					dt = time.mktime(dt.timetuple())
					print fecha_hora[0], dt
				elif args.timezone=="utc":
					dt = dt.astimezone(pytz.timezone('UTC'))
					print fecha_hora[0],dt
				elif args.timezone=="londres":
					dt = dt.astimezone(pytz.timezone('Europe/London'))
					print fecha_hora[0],dt
				elif args.timezone=="tokio":			
					dt = dt.astimezone(pytz.timezone('Asia/Tokyo'))				
					print fecha_hora[0],dt
				elif args.timezone=="moscu":
					dt = dt.astimezone(pytz.timezone('Europe/Moscow'))				
					print fecha_hora[0],dt
				elif args.timezone=="new_york":
					dt = dt.astimezone(pytz.timezone('America/New_York'))
					print fecha_hora[0],dt
		except ValueError:
			print "Hay una linea con formato incorrecto"
			raise SystemExit
	if args.json:
		print lista
if __name__ == "__main__":
	main()		
			

			
					



				
				
